source("globals.R")
## beta2 simulations -----------------------------------------------------------
source(BETA_2)
N           = 100                                # number of observations
K           = 5                                  # number of clusters
synth_data1 = beta2(N)
y1          = synth_data1$y                      # (N x 1)
X1          = synth_data1$X                      # (N x 2)
param_mat   = synth_data1$shape                  # (N x 2)
head(param_mat)
head(5 * X1[, 2] * exp(2 * X[, 1]))
head(5 * X1[, 2] * exp(2 * X1[, 1]))
head(5 * X1[, 3] + 3 * X1[, 4]
)
?runif
runif(3, min = c(-10, 0, 10), max = c(-8, 1, 20))
## beta2 simulations -----------------------------------------------------------
source(BETA_2)
N           = 100                                # number of observations
K           = 5                                  # number of clusters
synth_data2 = beta2(N)
head(y1)
head(param_mat)
y2          = synth_data2$y                      # (N x 1)
X2          = synth_data2$X                      # (N x 2)
param_mat2  = synth_data2$shape                  # (N x 2)
head(y2)
head(param_mat2)
source("globals.R")
setwd(HOME_DIR)
source(BETA_1)                                   # data generating scheme # 1
## run the VB algorithms and compare performance via:
##     (1) overlayed densities (true, vb1, vb2)
##     (2) point estimates (true - approx)
##     (3) convergence related figures
##         (i)   elbo plots
##         (ii)  iterative changes in approximating density
# (0) simulate first set of synthetic data (beta1)
N           = 100                                # number of observations
K           = 5                                  # number of clusters
synth_data1 = beta1(N)
y1          = synth_data1$y                      # (N x 1)
X1          = synth_data1$X                      # (N x 2)
param_mat1  = synth_data1$shape                  # (N x 2)
# (1) covariate-INDEPENENT vb
source(paste(COV_INDEP, VARBDR, sep = '/'))      # load cov-indep varbdr.R
theta1 = varbdr(y = y1, X = X1, K = K)           # store CAVI results
# (2) covariate-DEPENDENT vb
source(paste(COV_DEP, VARBDR, sep = '/'))        # load cov-dep varbdr.R
theta2 = varbdr(y = y1, X = X1, K = K)           # store CAVI results
# ------------------------------------------------------------------------------
source("density.R")
n = 30
x       = X1[n,]
y_grid  = seq(0, 1, len = 500)
params = list(shape1 = param_mat[n,1], shape2 = param_mat[n,2])
theta     = list(theta1, theta2)          # list of var. params for each alg
approx_d  = list(py_0, py_bouch)          # list of approx density functions
den_label = c("cov-indep", "cov-dep (b)") # labels for each approx density
compareDensities(y_grid, x,
dbeta, params,
approx_d, den_label,
theta, K)
n = 31
x       = X1[n,]
y_grid  = seq(0, 1, len = 500)
params = list(shape1 = param_mat[n,1], shape2 = param_mat[n,2])
theta     = list(theta1, theta2)          # list of var. params for each alg
approx_d  = list(py_0, py_bouch)          # list of approx density functions
den_label = c("cov-indep", "cov-dep (b)") # labels for each approx density
compareDensities(y_grid, x,
dbeta, params,
approx_d, den_label,
theta, K)
n = 30
x       = X1[n,]
y_grid  = seq(0, 1, len = 500)
params = list(shape1 = param_mat[n,1], shape2 = param_mat[n,2])
theta     = list(theta1, theta2)          # list of var. params for each alg
approx_d  = list(py_0, py_bouch)          # list of approx density functions
den_label = c("cov-indep", "cov-dep (b)") # labels for each approx density
compareDensities(y_grid, x,
dbeta, params,
approx_d, den_label,
theta, K)
n = 32
x       = X1[n,]
y_grid  = seq(0, 1, len = 500)
params = list(shape1 = param_mat[n,1], shape2 = param_mat[n,2])
theta     = list(theta1, theta2)          # list of var. params for each alg
approx_d  = list(py_0, py_bouch)          # list of approx density functions
den_label = c("cov-indep", "cov-dep (b)") # labels for each approx density
compareDensities(y_grid, x,
dbeta, params,
approx_d, den_label,
theta, K)
n = 31
x       = X1[n,]
y_grid  = seq(0, 1, len = 500)
params = list(shape1 = param_mat[n,1], shape2 = param_mat[n,2])
theta     = list(theta1, theta2)          # list of var. params for each alg
approx_d  = list(py_0, py_bouch)          # list of approx density functions
den_label = c("cov-indep", "cov-dep (b)") # labels for each approx density
compareDensities(y_grid, x,
dbeta, params,
approx_d, den_label,
theta, K)
n = 41
x       = X1[n,]
y_grid  = seq(0, 1, len = 500)
params = list(shape1 = param_mat[n,1], shape2 = param_mat[n,2])
theta     = list(theta1, theta2)          # list of var. params for each alg
approx_d  = list(py_0, py_bouch)          # list of approx density functions
den_label = c("cov-indep", "cov-dep (b)") # labels for each approx density
compareDensities(y_grid, x,
dbeta, params,
approx_d, den_label,
theta, K)
n = 42
x       = X1[n,]
y_grid  = seq(0, 1, len = 500)
params = list(shape1 = param_mat[n,1], shape2 = param_mat[n,2])
theta     = list(theta1, theta2)          # list of var. params for each alg
approx_d  = list(py_0, py_bouch)          # list of approx density functions
den_label = c("cov-indep", "cov-dep (b)") # labels for each approx density
compareDensities(y_grid, x,
dbeta, params,
approx_d, den_label,
theta, K)
n = 47
x       = X1[n,]
y_grid  = seq(0, 1, len = 500)
params = list(shape1 = param_mat[n,1], shape2 = param_mat[n,2])
theta     = list(theta1, theta2)          # list of var. params for each alg
approx_d  = list(py_0, py_bouch)          # list of approx density functions
den_label = c("cov-indep", "cov-dep (b)") # labels for each approx density
compareDensities(y_grid, x,
dbeta, params,
approx_d, den_label,
theta, K)
n = 46
x       = X1[n,]
y_grid  = seq(0, 1, len = 500)
params = list(shape1 = param_mat[n,1], shape2 = param_mat[n,2])
theta     = list(theta1, theta2)          # list of var. params for each alg
approx_d  = list(py_0, py_bouch)          # list of approx density functions
den_label = c("cov-indep", "cov-dep (b)") # labels for each approx density
compareDensities(y_grid, x,
dbeta, params,
approx_d, den_label,
theta, K)
n = 49
x       = X1[n,]
y_grid  = seq(0, 1, len = 500)
params = list(shape1 = param_mat[n,1], shape2 = param_mat[n,2])
theta     = list(theta1, theta2)          # list of var. params for each alg
approx_d  = list(py_0, py_bouch)          # list of approx density functions
den_label = c("cov-indep", "cov-dep (b)") # labels for each approx density
compareDensities(y_grid, x,
dbeta, params,
approx_d, den_label,
theta, K)
n = 10
x       = X1[n,]
y_grid  = seq(0, 1, len = 500)
params = list(shape1 = param_mat[n,1], shape2 = param_mat[n,2])
theta     = list(theta1, theta2)          # list of var. params for each alg
approx_d  = list(py_0, py_bouch)          # list of approx density functions
den_label = c("cov-indep", "cov-dep (b)") # labels for each approx density
compareDensities(y_grid, x,
dbeta, params,
approx_d, den_label,
theta, K)
n = 9
x       = X1[n,]
y_grid  = seq(0, 1, len = 500)
params = list(shape1 = param_mat[n,1], shape2 = param_mat[n,2])
theta     = list(theta1, theta2)          # list of var. params for each alg
approx_d  = list(py_0, py_bouch)          # list of approx density functions
den_label = c("cov-indep", "cov-dep (b)") # labels for each approx density
compareDensities(y_grid, x,
dbeta, params,
approx_d, den_label,
theta, K)
n = 8
x       = X1[n,]
y_grid  = seq(0, 1, len = 500)
params = list(shape1 = param_mat[n,1], shape2 = param_mat[n,2])
theta     = list(theta1, theta2)          # list of var. params for each alg
approx_d  = list(py_0, py_bouch)          # list of approx density functions
den_label = c("cov-indep", "cov-dep (b)") # labels for each approx density
compareDensities(y_grid, x,
dbeta, params,
approx_d, den_label,
theta, K)
n = 7
x       = X1[n,]
y_grid  = seq(0, 1, len = 500)
params = list(shape1 = param_mat[n,1], shape2 = param_mat[n,2])
theta     = list(theta1, theta2)          # list of var. params for each alg
approx_d  = list(py_0, py_bouch)          # list of approx density functions
den_label = c("cov-indep", "cov-dep (b)") # labels for each approx density
compareDensities(y_grid, x,
dbeta, params,
approx_d, den_label,
theta, K)
n = 6
x       = X1[n,]
y_grid  = seq(0, 1, len = 500)
params = list(shape1 = param_mat[n,1], shape2 = param_mat[n,2])
theta     = list(theta1, theta2)          # list of var. params for each alg
approx_d  = list(py_0, py_bouch)          # list of approx density functions
den_label = c("cov-indep", "cov-dep (b)") # labels for each approx density
compareDensities(y_grid, x,
dbeta, params,
approx_d, den_label,
theta, K)
n = 5
x       = X1[n,]
y_grid  = seq(0, 1, len = 500)
params = list(shape1 = param_mat[n,1], shape2 = param_mat[n,2])
theta     = list(theta1, theta2)          # list of var. params for each alg
approx_d  = list(py_0, py_bouch)          # list of approx density functions
den_label = c("cov-indep", "cov-dep (b)") # labels for each approx density
compareDensities(y_grid, x,
dbeta, params,
approx_d, den_label,
theta, K)
n = 4
x       = X1[n,]
y_grid  = seq(0, 1, len = 500)
params = list(shape1 = param_mat[n,1], shape2 = param_mat[n,2])
theta     = list(theta1, theta2)          # list of var. params for each alg
approx_d  = list(py_0, py_bouch)          # list of approx density functions
den_label = c("cov-indep", "cov-dep (b)") # labels for each approx density
compareDensities(y_grid, x,
dbeta, params,
approx_d, den_label,
theta, K)
n = 2
x       = X1[n,]
y_grid  = seq(0, 1, len = 500)
params = list(shape1 = param_mat[n,1], shape2 = param_mat[n,2])
theta     = list(theta1, theta2)          # list of var. params for each alg
approx_d  = list(py_0, py_bouch)          # list of approx density functions
den_label = c("cov-indep", "cov-dep (b)") # labels for each approx density
compareDensities(y_grid, x,
dbeta, params,
approx_d, den_label,
theta, K)
# (0) simulate first set of synthetic data (beta1)
N           = 100                                # number of observations
K           = 5                                  # number of clusters
synth_data1 = old_beta1(N, seed = 123)
y1          = synth_data1$y                      # (N x 1)
X1          = synth_data1$X                      # (N x 2)
param_mat1  = synth_data1$shape                  # (N x 2)
# (1) covariate-INDEPENENT vb
source(paste(COV_INDEP, VARBDR, sep = '/'))      # load cov-indep varbdr.R
theta1 = varbdr(y = y1, X = X1, K = K)           # store CAVI results
# (2) covariate-DEPENDENT vb
source(paste(COV_DEP, VARBDR, sep = '/'))        # load cov-dep varbdr.R
theta2 = varbdr(y = y1, X = X1, K = K)           # store CAVI results
# (3) overlay corresponding densities obtained from steps (1) and (2)
source(DENSITY)
source("density.R")
n = 2
x       = X1[n,]
y_grid  = seq(0, 1, len = 500)
params = list(shape1 = param_mat[n,1], shape2 = param_mat[n,2])
theta     = list(theta1, theta2)          # list of var. params for each alg
approx_d  = list(py_0, py_bouch)          # list of approx density functions
den_label = c("cov-indep", "cov-dep (b)") # labels for each approx density
compareDensities(y_grid, x,
dbeta, params,
approx_d, den_label,
theta, K)
n = 1
x       = X1[n,]
y_grid  = seq(0, 1, len = 500)
params = list(shape1 = param_mat[n,1], shape2 = param_mat[n,2])
theta     = list(theta1, theta2)          # list of var. params for each alg
approx_d  = list(py_0, py_bouch)          # list of approx density functions
den_label = c("cov-indep", "cov-dep (b)") # labels for each approx density
compareDensities(y_grid, x,
dbeta, params,
approx_d, den_label,
theta, K)
n = 12
x       = X1[n,]
y_grid  = seq(0, 1, len = 500)
params = list(shape1 = param_mat[n,1], shape2 = param_mat[n,2])
theta     = list(theta1, theta2)          # list of var. params for each alg
approx_d  = list(py_0, py_bouch)          # list of approx density functions
den_label = c("cov-indep", "cov-dep (b)") # labels for each approx density
compareDensities(y_grid, x,
dbeta, params,
approx_d, den_label,
theta, K)
n = 30
x       = X1[n,]
y_grid  = seq(0, 1, len = 500)
params = list(shape1 = param_mat[n,1], shape2 = param_mat[n,2])
theta     = list(theta1, theta2)          # list of var. params for each alg
approx_d  = list(py_0, py_bouch)          # list of approx density functions
den_label = c("cov-indep", "cov-dep (b)") # labels for each approx density
compareDensities(y_grid, x,
dbeta, params,
approx_d, den_label,
theta, K)
n = 32
x       = X1[n,]
y_grid  = seq(0, 1, len = 500)
params = list(shape1 = param_mat[n,1], shape2 = param_mat[n,2])
theta     = list(theta1, theta2)          # list of var. params for each alg
approx_d  = list(py_0, py_bouch)          # list of approx density functions
den_label = c("cov-indep", "cov-dep (b)") # labels for each approx density
compareDensities(y_grid, x,
dbeta, params,
approx_d, den_label,
theta, K)
rbeta(3, shape1 = c(1, 100, 10000), shape2 = c(1, 100, 10000))
rbeta(4, shape1 = c(1, 100, 10000), shape2 = c(1, 100, 10000))
rnorm(4, mean = c(1, 100, 10000), sd = c(1, 1, 1))
n = 33
x       = X1[n,]
y_grid  = seq(0, 1, len = 500)
params = list(shape1 = param_mat[n,1], shape2 = param_mat[n,2])
theta     = list(theta1, theta2)          # list of var. params for each alg
approx_d  = list(py_0, py_bouch)          # list of approx density functions
den_label = c("cov-indep", "cov-dep (b)") # labels for each approx density
compareDensities(y_grid, x,
dbeta, params,
approx_d, den_label,
theta, K)
n = 35
x       = X1[n,]
y_grid  = seq(0, 1, len = 500)
params = list(shape1 = param_mat[n,1], shape2 = param_mat[n,2])
theta     = list(theta1, theta2)          # list of var. params for each alg
approx_d  = list(py_0, py_bouch)          # list of approx density functions
den_label = c("cov-indep", "cov-dep (b)") # labels for each approx density
compareDensities(y_grid, x,
dbeta, params,
approx_d, den_label,
theta, K)
n = 36
x       = X1[n,]
y_grid  = seq(0, 1, len = 500)
params = list(shape1 = param_mat[n,1], shape2 = param_mat[n,2])
theta     = list(theta1, theta2)          # list of var. params for each alg
approx_d  = list(py_0, py_bouch)          # list of approx density functions
den_label = c("cov-indep", "cov-dep (b)") # labels for each approx density
compareDensities(y_grid, x,
dbeta, params,
approx_d, den_label,
theta, K)
n = 39
x       = X1[n,]
y_grid  = seq(0, 1, len = 500)
params = list(shape1 = param_mat[n,1], shape2 = param_mat[n,2])
theta     = list(theta1, theta2)          # list of var. params for each alg
approx_d  = list(py_0, py_bouch)          # list of approx density functions
den_label = c("cov-indep", "cov-dep (b)") # labels for each approx density
compareDensities(y_grid, x,
dbeta, params,
approx_d, den_label,
theta, K)
n = 88
x       = X1[n,]
y_grid  = seq(0, 1, len = 500)
params = list(shape1 = param_mat[n,1], shape2 = param_mat[n,2])
theta     = list(theta1, theta2)          # list of var. params for each alg
approx_d  = list(py_0, py_bouch)          # list of approx density functions
den_label = c("cov-indep", "cov-dep (b)") # labels for each approx density
compareDensities(y_grid, x,
dbeta, params,
approx_d, den_label,
theta, K)
n = 89
x       = X1[n,]
y_grid  = seq(0, 1, len = 500)
params = list(shape1 = param_mat[n,1], shape2 = param_mat[n,2])
theta     = list(theta1, theta2)          # list of var. params for each alg
approx_d  = list(py_0, py_bouch)          # list of approx density functions
den_label = c("cov-indep", "cov-dep (b)") # labels for each approx density
compareDensities(y_grid, x,
dbeta, params,
approx_d, den_label,
theta, K)
n = 99
x       = X1[n,]
y_grid  = seq(0, 1, len = 500)
params = list(shape1 = param_mat[n,1], shape2 = param_mat[n,2])
theta     = list(theta1, theta2)          # list of var. params for each alg
approx_d  = list(py_0, py_bouch)          # list of approx density functions
den_label = c("cov-indep", "cov-dep (b)") # labels for each approx density
compareDensities(y_grid, x,
dbeta, params,
approx_d, den_label,
theta, K)
n = 79
x       = X1[n,]
y_grid  = seq(0, 1, len = 500)
params = list(shape1 = param_mat[n,1], shape2 = param_mat[n,2])
theta     = list(theta1, theta2)          # list of var. params for each alg
approx_d  = list(py_0, py_bouch)          # list of approx density functions
den_label = c("cov-indep", "cov-dep (b)") # labels for each approx density
compareDensities(y_grid, x,
dbeta, params,
approx_d, den_label,
theta, K)
n = 14
x       = X1[n,]
y_grid  = seq(0, 1, len = 500)
params = list(shape1 = param_mat[n,1], shape2 = param_mat[n,2])
theta     = list(theta1, theta2)          # list of var. params for each alg
approx_d  = list(py_0, py_bouch)          # list of approx density functions
den_label = c("cov-indep", "cov-dep (b)") # labels for each approx density
compareDensities(y_grid, x,
dbeta, params,
approx_d, den_label,
theta, K)
N           = 100                                # number of observations
K           = 5                                  # number of clusters
synth_data2 = beta2(N)
y2          = synth_data2$y                      # (N x 1)
X2          = synth_data2$X                      # (N x 2)
param_mat2  = synth_data2$shape                  # (N x 2)
# (1) covariate-INDEPENENT vb
source(paste(COV_INDEP, VARBDR, sep = '/'))      # load cov-indep varbdr.R
theta2_1 = varbdr(y = y1, X = X1, K = K)           # store CAVI results
# (2) covariate-DEPENDENT vb
source(paste(COV_DEP, VARBDR, sep = '/'))        # load cov-dep varbdr.R
theta2_2 = varbdr(y = y1, X = X1, K = K)           # store CAVI results
n = 14
x       = X1[n,]
y_grid  = seq(0, 1, len = 500)
params = list(shape1 = param_mat1[n,1], shape2 = param_mat1[n,2])
theta     = list(theta1, theta2)          # list of var. params for each alg
approx_d  = list(py_0, py_bouch)          # list of approx density functions
den_label = c("cov-indep", "cov-dep (b)") # labels for each approx density
compareDensities(y_grid, x,
dbeta, params,
approx_d, den_label,
theta, K)
n = 13
x       = X1[n,]
y_grid  = seq(0, 1, len = 500)
params = list(shape1 = param_mat1[n,1], shape2 = param_mat1[n,2])
theta     = list(theta1, theta2)          # list of var. params for each alg
approx_d  = list(py_0, py_bouch)          # list of approx density functions
den_label = c("cov-indep", "cov-dep (b)") # labels for each approx density
compareDensities(y_grid, x,
dbeta, params,
approx_d, den_label,
theta, K)
n = 14
x       = X2[n,]
params2 = list(shape1 = param_mat2[n,1], shape2 = param_mat2[n,2])
theta2  = list(theta2_1, theta2_2)               # list of var. params
compareDensities(y_grid, x,
dbeta, params2,
approx_d, den_label,
theta2, K)
theta2_1$beta_k
source(BETA_2)
N           = 100                                # number of observations
K           = 5                                  # number of clusters
synth_data2 = beta2(N)
y2          = synth_data2$y                      # (N x 1)
X2          = synth_data2$X                      # (N x 2)
param_mat2  = synth_data2$shape                  # (N x 2)
# (1) covariate-INDEPENENT vb
source(paste(COV_INDEP, VARBDR, sep = '/'))      # load cov-indep varbdr.R
theta2_1 = varbdr(y = y2, X = X2, K = K)         # store CAVI results
# (2) covariate-DEPENDENT vb
source(paste(COV_DEP, VARBDR, sep = '/'))        # load cov-dep varbdr.R
theta2_2 = varbdr(y = y2, X = X2, K = K)         # store CAVI results
n = 14
x       = X2[n,]
params2 = list(shape1 = param_mat2[n,1], shape2 = param_mat2[n,2])
theta2  = list(theta2_1, theta2_2)               # list of var. params
theta2_1$beta_k
compareDensities(y_grid, x,
dbeta, params2,
approx_d, den_label,
theta2, K)
n = 21
x       = X2[n,]
params2 = list(shape1 = param_mat2[n,1], shape2 = param_mat2[n,2])
theta2  = list(theta2_1, theta2_2)               # list of var. params
compareDensities(y_grid, x,
dbeta, params2,
approx_d, den_label,
theta2, K)
n = 30
x       = X2[n,]
params2 = list(shape1 = param_mat2[n,1], shape2 = param_mat2[n,2])
theta2  = list(theta2_1, theta2_2)               # list of var. params
compareDensities(y_grid, x,
dbeta, params2,
approx_d, den_label,
theta2, K)
n = 99
x       = X2[n,]
params2 = list(shape1 = param_mat2[n,1], shape2 = param_mat2[n,2])
theta2  = list(theta2_1, theta2_2)               # list of var. params
compareDensities(y_grid, x,
dbeta, params2,
approx_d, den_label,
theta2, K)
